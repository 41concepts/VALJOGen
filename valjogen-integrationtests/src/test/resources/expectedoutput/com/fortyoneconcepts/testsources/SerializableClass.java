package com.fortyoneconcepts.valjogen.testsources;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Arrays;
import java.util.Objects;
import javax.annotation.Generated;

@Generated(value = "com.fortyoneconcepts.valjogen", date="2014-11-16T11:12Z", comments="Generated by ValjoGen code generator (ValjoGen.41concepts.com) from com.fortyoneconcepts.valjogen.testsources.MutableSerializableInterface")
public final class SerializableClass implements MutableSerializableInterface
{
  private static final long serialVersionUID = 42;

  private String value;

  @JsonCreator
  public static SerializableClass valueOf(@JsonProperty("value") final String value)
  {
    SerializableClass _instance = new SerializableClass(value);
    return _instance;
  }

  public static SerializableClass valueOf()
  {
    SerializableClass _instance = new SerializableClass();
    return _instance;
  }

  private SerializableClass(final String value)
  {
    super();
    this.value=Objects.requireNonNull(value);
  }

  private SerializableClass()
  {
    super();
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public String getValue()
  {
   return value;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public void setValue(final String value)
  {
   this.value=Objects.requireNonNull(value);
  }


  /**
  * {@inheritDoc}
  */
  @Override
  public int hashCode()
  {
    int _result = Objects.hash(value);
    return _result;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public boolean equals(final Object arg0)
  {
    if (this == arg0)
      return true;

    if (arg0 == null)
      return false;

    if (getClass() != arg0.getClass())
      return false;

    @SuppressWarnings("unchecked")
    SerializableClass _other = (SerializableClass) arg0;

    return (Objects.equals(value, _other.value));
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public String toString()
  {
    final StringBuilder _sb = new StringBuilder();
    _sb.append("SerializableClass [");
    _sb.append("value=");
    _sb.append(value); 
    _sb.append(']');
    return _sb.toString();
  }
}