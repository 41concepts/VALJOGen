package com.fortyoneconcepts.valjogen.testsources;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Arrays;
import java.util.Objects;
import javax.annotation.Generated;

@Generated(value = "com.fortyoneconcepts.valjogen", date="2014-11-10T18:07Z", comments="Generated by ValjoGen code generator (ValjoGen.41concepts.com) from com.fortyoneconcepts.valjogen.testsources.SimpleInterface")
public final class SimpleClass implements SimpleInterface
{
  private final Object object;
  private final String string;

  @JsonCreator
  public static SimpleClass valueOf(@JsonProperty("object") final Object object, @JsonProperty("string") final String string)
  {
    SimpleClass _instance = new SimpleClass(object, string);
    return _instance;
  }

  private SimpleClass(final Object object, final String string)
  {
    super();
    this.object=Objects.requireNonNull(object);
    this.string=Objects.requireNonNull(string);
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public Object getObject()
  {
   return object;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public String getString()
  {
   return string;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public int hashCode()
  {
    int _result = Objects.hash(object, string);
    return _result;
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public boolean equals(final Object arg0)
  {
    if (this == arg0)
      return true;

    if (arg0 == null)
      return false;

    if (getClass() != arg0.getClass())
      return false;

    @SuppressWarnings("unchecked")
    SimpleClass _other = (SimpleClass) arg0;

    return (Objects.equals(object, _other.object) && Objects.equals(string, _other.string));
  }

  /**
  * {@inheritDoc}
  */
  @Override
  public String toString()
  {
    final StringBuilder _sb = new StringBuilder();
    _sb.append("SimpleClass [");
    _sb.append("object=");
    _sb.append(object); 
    _sb.append(", ");
    _sb.append("string=");
    _sb.append(string); 
    _sb.append(']');
    return _sb.toString();
  }
}