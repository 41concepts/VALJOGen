/**
* Copyright (C) 2014 41concepts Aps
*
* This is a helper template group file that provides various utility templates.
**/
optBaseClass(clazz) ::= <%
<if(!clazz.baseClazzType.rootObject)> extends <clazz.baseClazzType.name><endif>
%>

optGenericQualifier(clazz, method) ::= <%
<if(method.static && clazz.genericQualifier)><clazz.genericQualifierText> <endif>
%>

guard(member, param) ::= <%
<if(member.ensureNotNullEnabled && (member.type.object || member.type.array))>
<clazz.helperTypes.javaUtilObjects.name>.requireNonNull(<param.name>)
<else>
<param.name>
<endif>
%>

uniqueVariableName(model, str) ::= <%
<model.variablesPrefix><str>
%>

declare_method(clazz, method) ::= <%
<method.modifiers:{m | <m>}; separator=" "> <if(!method.constructor)><optGenericQualifier(clazz, method)><method.returnType.prototypicalName> <endif><method.name>(<method.parameters:declare_parameter(); wrap, anchor, separator=", ">)
<if(method.thrownTypes)>
<\ >throws <method.thrownTypes:{m | <m.name>}; wrap, anchor, separator=", ">
<endif>
%>

declare_parameter(param) ::= <<
<[param.modifiers:{m | <m>}, param.type.prototypicalName]; separator=" "> <param.name>
>>

other_instance_get_member_value(other, member) ::= <%
<if(other.type.thisType)>
 <other.name>.<member.name>
<elseif(member.getter)>
 <other.name>.<member.getter.name>()
<elseif(other.type.thisSuperType)>
 <other.name>.<member.name>
<else>
  ?
<endif>
%>

annotation(a) ::= <% <a> %>