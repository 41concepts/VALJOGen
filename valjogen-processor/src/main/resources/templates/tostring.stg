/**
* Copyright (C) 2014 41concepts Aps
*
* This is a helper template group file that is responsible for generating code for the toString method.
**/
method_toString(clazz, method) ::= <<
<@javadoc><JavaDocMethod(method)><@end><@annotations>@Override<@end>
<declare_method(clazz, method)>
{
  <@preamble><@end>
  final StringBuilder <uniqueVariableName(clazz,"sb")> = new StringBuilder();
  <if(clazz.anyMembers)>
  <uniqueVariableName(clazz,"sb")>.append("<clazz.name> [");
  <clazz.members:{m | <toStringMember(m)> }; separator=memberSeparator()>
  <uniqueVariableName(clazz,"sb")>.append(']');
  <else>
  <uniqueVariableName(clazz,"sb")>.append("<clazz.name>");
  <endif>
  <@postamble><@end>
  return <@returnvalue><uniqueVariableName(clazz,"sb")>.toString()<@end>;
}
>>

memberSeparator() ::= <<
<\n><uniqueVariableName(clazz,"sb")>.append(", ");<\n>
>>

toStringMember(member) ::= <<
<uniqueVariableName(clazz,"sb")>.append("<member.name>=");
<uniqueVariableName(clazz,"sb")>.append(<(toStringTemplateNamesByTypeCategory.(member.type.typeCategory))(member.name, member.type)>);
>>

toStringTemplateNamesByTypeCategory ::= [ "PRIMITIVE": "toString_primitive", "ARRAY": "toString_array", default: "toString_object"]

toString_primitive(var,type) ::= <<
<var>
>>

toString_array(var, type) ::= <<
Arrays.toString(<var>)
>>

toString_object(var, type) ::= <<
<var>
>>
